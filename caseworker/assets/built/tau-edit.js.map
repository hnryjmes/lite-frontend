{"mappings":"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","sources":["node_modules/@swc/helpers/src/_class_call_check.js","node_modules/@swc/helpers/src/_create_class.js","node_modules/@swc/helpers/src/_iterable_to_array.js","node_modules/@swc/helpers/src/_array_like_to_array.js","node_modules/@swc/helpers/src/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/src/_sliced_to_array.js","node_modules/@swc/helpers/src/_array_with_holes.js","node_modules/@swc/helpers/src/_non_iterable_rest.js","caseworker/assets/javascripts/tau/no-suggestions-token-field.js","caseworker/assets/javascripts/tau/cle-suggestions.js","caseworker/assets/javascripts/tau/suggestions-token-field.js","caseworker/assets/javascripts/tau-edit.js"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n","import _arrayLikeToArray from './_array_like_to_array';\n\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n    return _arrayLikeToArray(o, minLen);\n}\n","import arrayWithHoles from './_array_with_holes';\nimport iterableToArrayLimit from './_iterable_to_array';\nimport nonIterableRest from './_non_iterable_rest';\nimport unsupportedIterableToArray from './_unsupported_iterable_to_array';\n\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","class NoSuggestionsTokenField {\n  constructor(controlListEntriesSelector, $noControlListCheckbox) {\n    this.controlListEntriesSelector = controlListEntriesSelector;\n    this.$noControlListCheckbox = $noControlListCheckbox;\n  }\n\n  init() {\n    this.$noControlListCheckbox.addEventListener(\"input\", (evt) =>\n      this.handleNoControlListCheckboxInput(evt)\n    );\n  }\n\n  emptyTokenField() {\n    // We have to load this here instead of the constructor as originally this will be a multiselect that will get\n    // switched out for a tokenset field and so we need to defer doing the setting until then\n    const $controlListEntries = document.querySelector(\n      this.controlListEntriesSelector\n    );\n    const { tokenfield } = $controlListEntries;\n    tokenfield.emptyItems();\n  }\n\n  displayNoCLEEntry() {\n    const $controlListEntries = document.querySelector(\n      this.controlListEntriesSelector\n    );\n\n    const $tokenFieldInput =\n      $controlListEntries.querySelector(\".tokenfield-input\");\n    $tokenFieldInput.style.display = \"none\";\n\n    const $notListedSuggestionField =\n      $controlListEntries.querySelector(\".tokenfield-set ul\");\n    const newLi = document.createElement(\"li\");\n    newLi.classList.add(\"tokenfield-set-item\", \"tau-none-item\");\n\n    const newSpan = document.createElement(\"span\");\n    newSpan.classList.add(\"item-label\");\n    newSpan.textContent = \"None\";\n\n    const newHref = document.createElement(\"a\");\n    newHref.classList.add(\"item-remove\");\n    newHref.tabIndex = -1;\n    newHref.textContent = \"×\";\n    newHref.addEventListener(\"click\", () => {\n      this.setCheckbox(false);\n    });\n\n    newLi.append(newSpan, newHref);\n    $notListedSuggestionField.appendChild(newLi);\n  }\n\n  removeNoCLEEntry() {\n    const $controlListEntries = document.querySelector(\n      this.controlListEntriesSelector\n    );\n\n    const $tokenFieldInput =\n      $controlListEntries.querySelector(\".tokenfield-input\");\n    $tokenFieldInput.style.removeProperty(\"display\");\n\n    const $notListedSuggestionItem = $controlListEntries.querySelector(\n      \".tokenfield-set .tau-none-item\"\n    );\n    $notListedSuggestionItem?.remove();\n  }\n\n  handleNoControlListCheckboxInput() {\n    const { checked } = this.$noControlListCheckbox;\n    if (checked) {\n      this.emptyTokenField();\n      this.displayNoCLEEntry();\n    } else {\n      this.removeNoCLEEntry();\n    }\n  }\n\n  setCheckbox(checked) {\n    this.$noControlListCheckbox.checked = checked;\n    this.$noControlListCheckbox.dispatchEvent(new Event(\"input\"));\n  }\n\n  reset() {\n    this.setCheckbox(false);\n  }\n}\n\nexport default NoSuggestionsTokenField;\n","class UniqueSuggestionsCollector {\n  constructor() {\n    this.suggestions = [];\n    this.seenExporterSuggestions = new Set();\n    this.seenAssessedSuggestions = new Set();\n  }\n\n  getSuggestionKey(suggestion) {\n    return suggestion.sort().join(\"|\");\n  }\n\n  addSuggestion(suggestionSet, suggestion, suggestionText) {\n    const suggestionKey = this.getSuggestionKey(suggestion);\n    if (suggestionSet.has(suggestionKey)) {\n      return;\n    }\n    suggestionSet.add(suggestionKey);\n    this.suggestions.push([suggestion, suggestionText]);\n  }\n\n  addExporterSuggestion(exporterSuggestion, exporterSuggestionText) {\n    this.addSuggestion(\n      this.seenExporterSuggestions,\n      exporterSuggestion,\n      exporterSuggestionText\n    );\n  }\n\n  addAssessedSuggestion(assessedSuggestion, assessedSuggestionText) {\n    this.addSuggestion(\n      this.seenAssessedSuggestions,\n      assessedSuggestion,\n      assessedSuggestionText\n    );\n  }\n}\n\nclass CLESuggestions {\n  constructor($suggestionsContainer, onSelectSuggestions) {\n    this.$suggestionsContainer = $suggestionsContainer;\n    this.onSelectSuggestions = onSelectSuggestions;\n  }\n\n  getSuggestionButton(suggestionText) {\n    const cleSuggestionButton = document.createElement(\"button\");\n    cleSuggestionButton.classList.add(\"lite-button--link\");\n    cleSuggestionButton.textContent = suggestionText;\n    return cleSuggestionButton;\n  }\n\n  getSuggestionText(suggestion) {\n    return suggestion.join(\", \");\n  }\n\n  getExporterSuggestionText(suggestion) {\n    const suggestionText = this.getSuggestionText(suggestion);\n    return `Select exporter suggestion ${suggestionText}`;\n  }\n\n  getAssessedSuggestionText(suggestion) {\n    const suggestionText = this.getSuggestionText(suggestion);\n    return `Copy previous assessment ${suggestionText}`;\n  }\n\n  getSuggestions(products) {\n    const uniqueSuggestionsCollector = new UniqueSuggestionsCollector();\n\n    for (const { controlListEntries } of products) {\n      const { exporter: exporterSuggestion, precedents: assessedSuggestions } =\n        controlListEntries;\n\n      if (exporterSuggestion && exporterSuggestion.length > 0) {\n        uniqueSuggestionsCollector.addExporterSuggestion(\n          exporterSuggestion,\n          this.getExporterSuggestionText(exporterSuggestion)\n        );\n      }\n\n      if (assessedSuggestions) {\n        for (const assessedSuggestion of assessedSuggestions) {\n          if (!assessedSuggestion.length) {\n            continue;\n          }\n          uniqueSuggestionsCollector.addAssessedSuggestion(\n            assessedSuggestion,\n            this.getAssessedSuggestionText(assessedSuggestion)\n          );\n        }\n      }\n    }\n    return uniqueSuggestionsCollector.suggestions;\n  }\n\n  setProducts(products) {\n    this.$suggestionsContainer.innerHTML = \"\";\n\n    const suggestions = this.getSuggestions(products);\n    for (const [suggestion, suggestionText] of suggestions) {\n      const cleSuggestionButton = this.getSuggestionButton(suggestionText);\n      cleSuggestionButton.addEventListener(\"click\", (evt) =>\n        this.handleSuggestionButtonClick(evt, suggestion)\n      );\n      this.$suggestionsContainer.append(cleSuggestionButton);\n    }\n  }\n\n  handleSuggestionButtonClick(evt, suggestion) {\n    evt.preventDefault();\n    this.onSelectSuggestions(suggestion);\n  }\n}\n\nexport default CLESuggestions;\n","class SuggestionsTokenField {\n  constructor(controlListEntriesSelector) {\n    this.controlListEntriesSelector = controlListEntriesSelector;\n  }\n\n  setSuggestions(suggestions) {\n    // We have to load this here instead of the constructor as originally this will be a multiselect that will get\n    // switched out for a tokenset field and so we need to defer doing the setting until then\n    const $controlListEntries = document.querySelector(\n      this.controlListEntriesSelector\n    );\n    const { tokenfield } = $controlListEntries;\n    tokenfield.addItems(\n      suggestions.map((rating) => ({\n        id: rating,\n        name: rating,\n      }))\n    );\n  }\n}\n\nexport default SuggestionsTokenField;\n","import NoSuggestionsTokenField from \"./tau/no-suggestions-token-field\";\nimport CLESuggestions from \"./tau/cle-suggestions\";\nimport SuggestionsTokenField from \"./tau/suggestions-token-field\";\n\nconst initAssessmentForm = () => {\n  const noControlListCheckboxEl = document.querySelector(\n    \"[name=does_not_have_control_list_entries]\"\n  );\n  const noSuggestionsTokenField = new NoSuggestionsTokenField(\n    \"#control_list_entries\",\n    noControlListCheckboxEl\n  );\n  noSuggestionsTokenField.init();\n\n  const suggestionsTokenField = new SuggestionsTokenField(\n    \"#control_list_entries\"\n  );\n\n  const suggestionsEl = document.createElement(\"div\");\n  suggestionsEl.classList.add(\"tau__cle-suggestions\");\n  const controlListEntriesLabel = document.querySelector(\"[for=control_list_entries]\");\n  controlListEntriesLabel.parentNode.insertBefore(suggestionsEl, controlListEntriesLabel.nextSibling);\n\n  const cleSuggestions = new CLESuggestions(\n    suggestionsEl,\n    (selectedSuggestions) => {\n      suggestionsTokenField.setSuggestions(selectedSuggestions);\n      noSuggestionsTokenField.reset();\n    }\n  );\n\n  const products = JSON.parse(\n    document.querySelector(\"#cle-suggestions-json\").textContent\n  );\n  cleSuggestions.setProducts(products);\n};\n\ninitAssessmentForm();\n"],"names":["$a799c7d98325b3ac$export$2e2bcd8739ae039","instance","Constructor","TypeError","$9585434c2c66a7c0$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$9585434c2c66a7c0$export$2e2bcd8739ae039","protoProps","staticProps","prototype","$95777fde86c7127f$export$2e2bcd8739ae039","iter","Symbol","iterator","Array","from","$3fbed69e34546862$export$2e2bcd8739ae039","arr","len","arr2","$df1ca92cc1bcaedc$export$2e2bcd8739ae039","o","minLen","n","toString","call","slice","constructor","name","test","$3b220a588ec3da93$export$2e2bcd8739ae039","isArray","$5a64e8e9053d798d$export$2e2bcd8739ae039","$17a40186ea415ec4$export$2e2bcd8739ae039","$4b920d176a868165$export$2e2bcd8739ae039","$4b920d176a868165$var$NoSuggestionsTokenField","controlListEntriesSelector","$noControlListCheckbox","this","value","addEventListener","evt","_this","handleNoControlListCheckboxInput","document","querySelector","tokenfield","emptyItems","$controlListEntries","style","display","$notListedSuggestionField","newLi","createElement","classList","add","newSpan","textContent","newHref","tabIndex","setCheckbox","append","appendChild","removeProperty","$notListedSuggestionItem","remove","checked","emptyTokenField","displayNoCLEEntry","removeNoCLEEntry","dispatchEvent","Event","$105bcdf2ec635b3b$var$UniqueSuggestionsCollector","suggestions","seenExporterSuggestions","Set","seenAssessedSuggestions","suggestion","sort","join","suggestionSet","suggestionText","suggestionKey","getSuggestionKey","has","push","exporterSuggestion","exporterSuggestionText","addSuggestion","assessedSuggestion","assessedSuggestionText","$105bcdf2ec635b3b$export$2e2bcd8739ae039","$105bcdf2ec635b3b$var$CLESuggestions","$suggestionsContainer","onSelectSuggestions","cleSuggestionButton","getSuggestionText","concat","products","uniqueSuggestionsCollector","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","controlListEntries","exporter","assessedSuggestions","precedents","addExporterSuggestion","getExporterSuggestionText","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","addAssessedSuggestion","getAssessedSuggestionText","err","return","innerHTML","getSuggestions","_value","getSuggestionButton","_this1","handleSuggestionButtonClick","_loop","preventDefault","$dc1d20f0b0551029$export$2e2bcd8739ae039","$dc1d20f0b0551029$var$SuggestionsTokenField","addItems","map","rating","id","noControlListCheckboxEl","noSuggestionsTokenField","init","suggestionsTokenField","suggestionsEl","controlListEntriesLabel","parentNode","insertBefore","nextSibling","cleSuggestions","selectedSuggestions","setSuggestions","reset","JSON","parse","setProducts","$72c7d051bd97b7a5$var$initAssessmentForm"],"version":3,"file":"tau-edit.js.map"}